// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopManagment.Infrastructure.EFCore;

#nullable disable

namespace ShopManagment.Infrastructure.EFCore.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopManagment.Domain.ProductCategoryAgg.ProductCategoryTypeAgg.ProductCategoryType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasMaxLength(55)
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentProductCategoryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ParentProductCategoryTypeId");

                    b.ToTable("ProductCategoryTypes", (string)null);
                });

            modelBuilder.Entity("ShopManagment.Domain.ProductCategoryAgg.ProductCategoryTypeAgg.ProductCategoryType", b =>
                {
                    b.HasOne("ShopManagment.Domain.ProductCategoryAgg.ProductCategoryTypeAgg.ProductCategoryType", "ParentProductCategoryType")
                        .WithMany("SubType")
                        .HasForeignKey("ParentProductCategoryTypeId");

                    b.Navigation("ParentProductCategoryType");
                });

            modelBuilder.Entity("ShopManagment.Domain.ProductCategoryAgg.ProductCategoryTypeAgg.ProductCategoryType", b =>
                {
                    b.Navigation("SubType");
                });
#pragma warning restore 612, 618
        }
    }
}
